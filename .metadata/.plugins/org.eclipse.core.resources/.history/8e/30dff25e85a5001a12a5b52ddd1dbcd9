package Factory;

import Entidades.Coordinador;
import Entidades.Docente;
import Entidades.Estudiante;
import Entidades.Usuario;
import Facade.ICrudUsuarioFacade;
import Facade.IUsuarioFacade;
import Singleton.ProductDao;
import rest.Model.Util.ResponseGeneric;

public class UsuarioFactory implements IUsuarioFacade{

	/**
	 *
	 */
	public ResponseGeneric sendService(Usuario request) {
		ResponseGeneric response= null;
		
		
		
		switch(request.getMetodo())
		{
			/*
			case "validar":
				response = Usuario.validarUsuario(request);
			break;*/
			
			case "crear":
				switch(request.getIdTipoUsuario()) 
				{
					case "0"://Coord
						ICrudUsuarioFacade iCrudCoordinador =  new Coordinador();
						response = iCrudCoordinador.registro(request);
					break;
					case "1"://Docente
						ICrudUsuarioFacade iCrudDocente =  new Docente();
						response = iCrudDocente.registro(request);
					break;
					case "2"://Estudiante
							ICrudUsuarioFacade iCrudEstudiante =  new Estudiante();
							response = iCrudEstudiante.registro(request);
					break;
				}
			break;
			
			case "actualizar":
				switch(request.getIdTipoUsuario()) 
				{
					case "0"://Coord
					break;
					case "1"://Docente
					break;
					case "2"://Estudiante
					break;
				}
			break;
		}
		return null;
	}

	@Override
	public Usuario getUsuario(Usuario request) {
		ProductDao pd = new ProductDao();
		Usuario usuario=new Usuario();
		request.setMetodo("ingreso");
		//Paso 1 Realiza la consulta basica del usuario
		usuario= pd.consultaUsuarioBase(request);
			request.setIdUsuario(usuario.getIdUsuario());
			request.setNombreUsuario(usuario.getNombreUsuario());
			request.setCorreo(usuario.getCorreo());
			request.setTelefono(usuario.getTelefono());
			request.setEdad(usuario.getEdad());
			request.setGenero(usuario.getGenero());
			request.setContrasena(usuario.getContrasena());
			request.setIdTipoUsuario(usuario.getIdTipoUsuario());
			request.setFlagCase(usuario.getFlagCase());
		switch(request.getIdTipoUsuario())
		{
			case "0":
				ICrudUsuarioFacade iCrudCoordinador =  new Coordinador();
				request = iCrudCoordinador.getUsuario(request);
			break;
			case "1":
				ICrudUsuarioFacade iCrudDocente =  new Docente();
				request = iCrudDocente.getUsuario(request);
			break;
			case "2":
				ICrudUsuarioFacade iCrudEstudiante =  new Estudiante();
				request = iCrudEstudiante.getUsuario(request);
			break;
		}
		
		return request;
	}

	

}
